import{r as g,j as n,B as P,c as E,f as T,q as x,w as R,g as H}from"./index-CIoc_wd8.js";import{L as F,E as _}from"./Loader-DE0i7qD0.js";class h{constructor(t=0,r="Network Error"){this.status=t,this.text=r}}const q=()=>{if(!(typeof localStorage>"u"))return{get:e=>Promise.resolve(localStorage.getItem(e)),set:(e,t)=>Promise.resolve(localStorage.setItem(e,t)),remove:e=>Promise.resolve(localStorage.removeItem(e))}},s={origin:"https://api.emailjs.com",blockHeadless:!1,storageProvider:q()},p=e=>e?typeof e=="string"?{publicKey:e}:e.toString()==="[object Object]"?e:{}:{},V=(e,t="https://api.emailjs.com")=>{if(!e)return;const r=p(e);s.publicKey=r.publicKey,s.blockHeadless=r.blockHeadless,s.storageProvider=r.storageProvider,s.blockList=r.blockList,s.limitRate=r.limitRate,s.origin=r.origin||t},b=async(e,t,r={})=>{const o=await fetch(s.origin+e,{method:"POST",headers:r,body:t}),a=await o.text(),i=new h(o.status,a);if(o.ok)return i;throw i},y=(e,t,r)=>{if(!e||typeof e!="string")throw"The public key is required. Visit https://dashboard.emailjs.com/admin/account";if(!t||typeof t!="string")throw"The service ID is required. Visit https://dashboard.emailjs.com/admin";if(!r||typeof r!="string")throw"The template ID is required. Visit https://dashboard.emailjs.com/admin/templates"},B=e=>{if(e&&e.toString()!=="[object Object]")throw"The template params have to be the object. Visit https://www.emailjs.com/docs/sdk/send/"},w=e=>e.webdriver||!e.languages||e.languages.length===0,v=()=>new h(451,"Unavailable For Headless Browser"),N=(e,t)=>{if(!Array.isArray(e))throw"The BlockList list has to be an array";if(typeof t!="string")throw"The BlockList watchVariable has to be a string"},O=e=>{var t;return!((t=e.list)!=null&&t.length)||!e.watchVariable},K=(e,t)=>e instanceof FormData?e.get(t):e[t],j=(e,t)=>{if(O(e))return!1;N(e.list,e.watchVariable);const r=K(t,e.watchVariable);return typeof r!="string"?!1:e.list.includes(r)},k=()=>new h(403,"Forbidden"),D=(e,t)=>{if(typeof e!="number"||e<0)throw"The LimitRate throttle has to be a positive number";if(t&&typeof t!="string")throw"The LimitRate ID has to be a non-empty string"},M=async(e,t,r)=>{const o=Number(await r.get(e)||0);return t-Date.now()+o},L=async(e,t,r)=>{if(!t.throttle||!r)return!1;D(t.throttle,t.id);const o=t.id||e;return await M(o,t.throttle,r)>0?!0:(await r.set(o,Date.now().toString()),!1)},S=()=>new h(429,"Too Many Requests"),C=async(e,t,r,o)=>{const a=p(o),i=a.publicKey||s.publicKey,d=a.blockHeadless||s.blockHeadless,u=a.storageProvider||s.storageProvider,m={...s.blockList,...a.blockList},l={...s.limitRate,...a.limitRate};return d&&w(navigator)?Promise.reject(v()):(y(i,e,t),B(r),r&&j(m,r)?Promise.reject(k()):await L(location.pathname,l,u)?Promise.reject(S()):b("/api/v1.0/email/send",JSON.stringify({lib_version:"4.4.1",user_id:i,service_id:e,template_id:t,template_params:r}),{"Content-type":"application/json"}))},I=e=>{if(!e||e.nodeName!=="FORM")throw"The 3rd parameter is expected to be the HTML form element or the style selector of the form"},Y=e=>typeof e=="string"?document.querySelector(e):e,J=async(e,t,r,o)=>{const a=p(o),i=a.publicKey||s.publicKey,d=a.blockHeadless||s.blockHeadless,u=s.storageProvider||a.storageProvider,m={...s.blockList,...a.blockList},l={...s.limitRate,...a.limitRate};if(d&&w(navigator))return Promise.reject(v());const f=Y(r);y(i,e,t),I(f);const c=new FormData(f);return j(m,c)?Promise.reject(k()):await L(location.pathname,l,u)?Promise.reject(S()):(c.append("lib_version","4.4.1"),c.append("service_id",e),c.append("template_id",t),c.append("user_id",i),b("/api/v1.0/email/send-form",c))},U={init:V,send:C,sendForm:J,EmailJSResponseStatus:h},A=async e=>{const t=Math.floor(Math.random()*1e6).toString();try{await U.send("service_96bwc4m","template_n1o1sjd",{message:t,to_email:e},"7YVYPyE5-YGQgSv0e"),localStorage.setItem("olympd_prefix",JSON.stringify({code:t})),console.log("Email sent successfully.")}catch(r){throw console.error("Error sending email:",r),r}},z=()=>{const[e,t]=g.useState({email:""}),[r,o]=g.useState(!1),[a,i]=g.useState(!1),d=async m=>{m.preventDefault();try{i(!0);const l=e.email.toLowerCase(),f=E(T,"OlympiadUsers"),c=x(f,R("email","==",l));(await H(c)).empty?(i(!1),o(!0)):(t({email:""}),await A(l),i(!1),window.location.reload())}catch(l){alert("Error querying data from Firestore: "+l)}},u=m=>{t({email:m.target.value}),o(!1)};return n.jsxs(n.Fragment,{children:[a&&n.jsx(F,{title:"Loading.."}),n.jsx("h1",{children:"Enter Email"}),n.jsxs("form",{onSubmit:d,children:[n.jsxs("div",{className:"form-group",children:[n.jsx("label",{htmlFor:"email",children:"Email"}),n.jsx("input",{type:"email",className:"form-control",required:!0,name:"email",autoFocus:!0,autoComplete:"off",value:e.email,onChange:u}),n.jsx("p",{className:"input-note",children:"Note: You will get notification on email. "}),r&&n.jsx(_,{message:"Please enter registered email."})]}),n.jsx(P,{title:"Send",type:"submit"})]})]})};export{z as default};
